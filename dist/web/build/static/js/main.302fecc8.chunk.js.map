{"version":3,"sources":["components/Navbar.js","components/TopNav.js","screens/Home.js","screens/DriveHelp.js","components/ProgressBar.js","components/BotState.js","utils.js","hook/useTabState.js","utils/APICaller.js","utils/methods.js","screens/Task.js","components/Select.js","components/CategorySelector.js","screens/AddTask.js","screens/JoinRequests.js","screens/CreateLink.js","App.js","index.js","components/Input.js","components/NightModeToggle.js"],"names":["Navbar","className","NightModeToggle","TopNav","nav","to","name","Search","lazy","Downloads","Drive","Home","tab","fallback","i","DriveHelp","useState","clientId","setClientId","clientSecret","setClientSecret","authCode","setAuthCode","showAuthCodeInput","setShowAuthCodeInput","token","setToken","loading","setLoading","error","setError","onSubmit","e","preventDefault","fetch","then","res","json","resp","window","open","authURL","JSON","stringify","Input","id","label","value","onChange","required","style","color","disabled","type","onClick","str","el","document","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","ProgressBar","bgcolor","progress","height","progressText","Parentdiv","Childdiv","width","backgroundColor","textDiv","fontSize","BotState","props","botState","total","current","nextData","isEmpty","clamp","Math","trunc","splitArray","inputArray","pages","floor","length","finalArr","push","slice","useTabState","isActive","setUsActive","handleVisibilityChange","useCallback","visibilityState","useEffect","addEventListener","removeEventListener","APICaller","method","reqUrl","data","headers","Accept","Promise","resolve","reject","url","options","toLowerCase","qs","axios","response","catch","defaultValue","categories","isMainBot","getCatFromLocalStorage","parse","localStorage","getItem","setCatFromLocalStorage","setItem","Task","setdata","history","useHistory","loadingText","setLoadingText","setBotState","setCategories","catLoading","setCatLoading","catObj","reduce","ac","cu","selectedItems","setSelectedItems","filters","setfilters","by","order","sort","setSort","tasks","allTask","filterTasks","filter","includes","linkType","status","map","size","categoryState","flags","isEuOrgLink","isNewMdisk","thumbUrl","useCustomMessage","orderBy","handleSort","col","temp","getData","getProcesStateData","getCategoryData","resData","refreshTime","timer","setTimeout","clearTimeout","startTask","numberOfTimes","selectedTask","_id","pageSize","iterator","activeIndex","indexOf","console","log","selectFilters","typeLink","clearAll","isSelected","marginLeft","bind","this","padding","checked","target","index","key","groupInfo","username","invite_link","replace","title","toString","membersCount","category","page","pageIncrementor","channelName","cname","lastExecuted","date","dateObj","Date","toLocaleTimeString","toLocaleDateString","getTimeStr","pathname","state","wrapperClass","labelProps","htmlFor","defaultProps","text","catOptions","defaultCatState","isRealImage","CategorySelector","defaultState","handleCategoryState","isLastElement","handleDeleteCatagory","isThumbActive","tempObj","setCategory","setSize","setPage","setPageIncrementor","setIsRealImage","Select","max","paddingBottom","defaultLinkOptions","location","useLocation","locationState","linkOptions","setLinkOptions","groupId","setGroupId","setGroupInfo","setCategoryState","setChannelName","backupChannelLink","setBackupChannelLink","setLinkType","thumbActive","setThumbActive","setThumbUrl","isCustomCname","setIsCustomCname","setCname","setIsEuOrgLink","setIsNewMdisk","setCustomMessage","newCat","newCategoryState","params","isEqual","alignItems","telegramData","result","flex","justifyContent","isDeleted","JoinRequests","setfilter","joinRequests","dayfilter","parseInt","newDate","moment","add","getDateFilter","created","format","post","action","handleFilters","onClickApproveRequest","endpoint","requests","approveData","marginRight","from","first_name","chat","sucessMsg","setSucessMsg","textMessage","setTextMessage","rows","encodThumbUrl","encodeURIComponent","encodesMessage","finalLink","origin","navigator","clipboard","writeText","setInterval","fontWeight","App","exact","path","component","AddTask","CreateLink","ReactDOM","render","StrictMode","getElementById","localStored","process","browser","nightMode","setNightMode","classList","remove"],"mappings":"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","file":"static/js/main.302fecc8.chunk.js","sourcesContent":["import React from \"react\";\nimport NightModeToggle from \"./NightModeToggle\";\n\nfunction Navbar() {\n  return (\n    <div className=\"nav\">\n      <div className=\"content\">\n        <div className=\"nav-logo\">\n          <h1 className=\"h2 m-0\">Torrent AIO bot</h1>\n        </div>\n        <div className=\"nav-links\">\n          <NightModeToggle />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function TopNav({ nav }) {\n  return (\n    <div className=\"nav nav-horiz\">\n      <div className=\"content\">\n        <ul className=\"d-flex align-items-center space-around width-100 m-0\">\n          <li className={`cursor-pointer p-0 ph-1 height-100 d-flex align-items-center${nav === \"search\" ? \" border-bottom-1\" : \"\"}`}>\n            <Link to=\"/search\" className=\"height-100 d-flex align-items-center\">\n              <i className=\"h2 m-0 d-flex align-items-center\">\n                <ion-icon name=\"search-outline\" />\n              </i>\n              <span className=\"tablet-desktop-only ml-05\">Search</span>\n            </Link>\n          </li>\n          <li className={`cursor-pointer p-0 ph-1 height-100 d-flex align-items-center${nav === \"downloads\" ? \" border-bottom-1\" : \"\"}`}>\n            <Link to=\"/download\" className=\"height-100 d-flex align-items-center\">\n              <i className=\"h2 m-0 d-flex align-items-center\">\n                <ion-icon name=\"download-outline\" />\n              </i>\n              <span className=\"tablet-desktop-only ml-05\">Downloads</span>\n            </Link>\n          </li>\n          <li className={`cursor-pointer p-0 ph-1 height-100 d-flex align-items-center${nav === \"drive\" ? \" border-bottom-1\" : \"\"}`}>\n            <Link to=\"/drive\" className=\"height-100 d-flex align-items-center\">\n              <i className=\"h2 m-0 d-flex align-items-center\">\n                <ion-icon name=\"push-outline\" />\n              </i>\n              <span className=\"tablet-desktop-only ml-05\">Drive</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React, { lazy, Suspense } from \"react\";\nimport TopNav from \"../components/TopNav\";\n\nconst Search = lazy(() => import(\"../screens/Search\"));\nconst Downloads = lazy(() => import(\"../screens/Downloads\"));\nconst Drive = lazy(() => import(\"../screens/Drive\"));\n\nexport default function Home({ tab }) {\n  const nav = tab || \"search\";\n\n  return (\n    <>\n      <TopNav nav={nav} />\n      <main>\n        <div className=\"content\">\n          <Suspense fallback={<div className=\"div-loading\" />}>\n            {nav === \"search\" && <Search />}\n            {nav === \"downloads\" && <Downloads />}\n            {nav === \"drive\" && <Drive />}\n          </Suspense>\n        </div>\n      </main>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Input from \"../components/Input\";\n\nexport default function DriveHelp() {\n  const [clientId, setClientId] = useState(\"\");\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [authCode, setAuthCode] = useState(\"\");\n  const [showAuthCodeInput, setShowAuthCodeInput] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const copyToClipboard = () => {\n    const str = token;\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  const onSubmit = async e => {\n    if (e) e.preventDefault();\n    setLoading(true);\n    if (clientId && clientSecret && !authCode) {\n      const resp = await fetch(`/api/v1/drive/getAuthURL?clientId=${clientId}&clientSecret=${clientSecret}`).then(res => res.json());\n      if (!resp || resp.error) {\n        setError(resp.error || \"An error occured\");\n      } else {\n        window.open(resp.authURL);\n        setShowAuthCodeInput(true);\n      }\n    } else if (clientId && clientSecret && authCode) {\n      const resp = await fetch(\n        `/api/v1/drive/getAuthToken?clientId=${clientId}&clientSecret=${clientSecret}&authCode=${authCode}`\n      ).then(res => res.json());\n      if (!resp || resp.error) {\n        setError(resp.error || \"An error occured\");\n      } else {\n        setToken(JSON.stringify(resp.token));\n      }\n    }\n    setLoading(false);\n  };\n\n  return (\n    <main>\n      <div className=\"content\">\n        <h1>Gdrive token generator</h1>\n        <form onSubmit={onSubmit}>\n          <Input id=\"clientId\" name=\"clientId\" label=\"Client Id\" value={clientId} onChange={setClientId} required />\n          <Input id=\"clientSecret\" name=\"clientSecret\" label=\"Client Secret\" value={clientSecret} onChange={setClientSecret} required />\n          {showAuthCodeInput && <Input id=\"authCode\" name=\"authCode\" label=\"Auth code\" value={authCode} onChange={setAuthCode} required />}\n          {error && <div style={{ color: \"red\" }}>{error}</div>}\n          <button disabled={loading} className={`btn primary${loading ? \" loading\" : \"\"}`} type=\"submit\">\n            {authCode ? \"Get auth code\" : \"Generate token\"}\n          </button>\n        </form>\n        {token && (\n          <>\n            <div className=\"mt-1\">{token}</div>\n            <button className=\"btn primary\" onClick={copyToClipboard}>\n              Copy token\n            </button>\n          </>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = ({ bgcolor, progress, height, progressText }) => {\n  const Parentdiv = {\n    height: height\n  };\n\n  const Childdiv = {\n    width: `${progress}%`,\n    backgroundColor: bgcolor\n  };\n\n  const textDiv = {\n    fontSize: height - 2\n  };\n\n  return (\n    <div className=\"progress-bar\" style={Parentdiv}>\n      <div className=\"progress-bar-child\" style={Childdiv}>\n        <span className=\"progress-bar-text\" style={textDiv}>\n          {progressText ? progressText : `${progress}%`}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport clamp from \"lodash/clamp\";\n\nimport Progressbar from \"./ProgressBar\";\nconst progressHeight = 16;\n\nconst BotState = props => {\n  const { botState = {} } = props;\n  const { total = 0, current = 0, nextData = 0 } = botState;\n\n  return (\n    <div className=\"bot-state\">\n      {isEmpty(botState) ? (\n        <div>No Active task</div>\n      ) : (\n        <>\n          {total ? (\n            <>\n              <div>Current Queue</div>\n              <Progressbar\n                bgcolor=\"#ff00ff\"\n                progress={clamp(Math.trunc((current * 100) / total), 0, 100)}\n                progressText={`${current}/${total}`}\n                height={progressHeight}\n              />\n            </>\n          ) : null}\n          {nextData ? (\n            <>\n              <div>Next Queue</div>\n              <Progressbar bgcolor=\"orange\" progress=\"0\" progressText={`${0}/${nextData}`} height={progressHeight} />{\" \"}\n            </>\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\nexport default BotState;\n","export const splitArray = inputArray => {\n  const pageSize = 10;\n\n  const pages = Math.floor(inputArray.length / pageSize);\n  const finalArr = [];\n  for (let i = 0; i <= pages; i++) {\n    finalArr.push(inputArray.slice(i * pageSize, (i + 1) * pageSize));\n  }\n  return [finalArr, pageSize];\n};\n","import { useEffect, useState, useCallback } from \"react\";\n\nconst useTabState = () => {\n  const [isActive, setUsActive] = useState(true);\n\n  const handleVisibilityChange = useCallback(() => {\n    setUsActive(document.visibilityState === \"visible\");\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return { isActive };\n};\n\nexport default useTabState;\n","import axios from \"axios\";\nimport isEmpty from \"lodash/isEmpty\";\nimport qs from \"qs\";\n\nconst apiBaseUrl = process.env.NODE_ENV === \"development\" ? \"http://localhost:5000\" : \"\";\n\nconst APICaller = ({\n  method = \"get\",\n  reqUrl,\n  data = {},\n  headers = {\n    \"content-type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n}) => {\n  return new Promise(async (resolve, reject) => {\n    // const user = localStorage.getItem(\"user\");\n    // let { token = false } = user ? JSON.parse(user) : {};\n\n    let url = `${apiBaseUrl}${reqUrl}`;\n    // headers = token\n    //   ? { ...headers, Authorization: `Bearer ${token}` }\n    //   : headers;\n    let options = {\n      method,\n      url,\n      data,\n      headers\n    };\n    if (method.toLowerCase() === \"get\") {\n      options.url += isEmpty(options.data) ? \"\" : `?${qs.stringify(options.data)}`;\n      delete options[\"data\"];\n    }\n    // console.log(\"request options\", options);\n    axios({ ...options })\n      .then(response => {\n        // console.log(\"%c{res}\", \"color: green\", \" => \", response); // eslint-disable-line no-console\n        resolve(response);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\nexport default APICaller;\n","const defaultValue = { categories: [], isMainBot: false };\nexport const getCatFromLocalStorage = () => JSON.parse(localStorage.getItem(\"categories\")) || defaultValue;\n\nexport const setCatFromLocalStorage = categories => localStorage.setItem(\"categories\", JSON.stringify(categories || defaultValue));\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport orderBy from \"lodash/orderBy\";\nimport BotState from \"../components/BotState\";\nimport { splitArray } from \"../utils\";\nimport isEmpty from \"lodash/isEmpty\";\nimport useTabState from \"../hook/useTabState\";\nimport APICaller from \"../utils/APICaller\";\nimport { getCatFromLocalStorage, setCatFromLocalStorage } from \"../utils/methods\";\n\nconst getTimeStr = date => {\n  const dateObj = new Date(date);\n  return `${dateObj.toLocaleTimeString()} ${dateObj.toLocaleDateString()}`;\n};\n\nexport default function Task() {\n  const [data, setdata] = useState({});\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"Loading...\");\n  const [botState, setBotState] = useState({});\n  const { isActive } = useTabState();\n\n  const [categories, setCategories] = useState([]);\n  const [catLoading, setCatLoading] = useState(false);\n  const catObj = categories.reduce((ac, cu) => ({ ...ac, [cu.value]: cu.label }), {});\n\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [filters, setfilters] = useState([]);\n\n  // ['asc', 'desc']\n  const [sort, setSort] = useState({ by: \"\", order: \"asc\" });\n\n  const { tasks: allTask = [] } = data;\n  let filterTasks = filters.length ? allTask.filter(e => filters.includes(e.linkType) || filters.includes(e.status)) : allTask;\n  filterTasks = filterTasks.map(el => ({\n    ...el,\n    size: el.categoryState.reduce((ac, e) => ac + +e.size, 0),\n    flags: `${el.isEuOrgLink ? \"eu.org\" : \"\"}\\n${el.isNewMdisk ? \"Newlink\" : \"\"}\\n${el.thumbUrl ? \"Thumb\" : \"\"}\\n${\n      el.useCustomMessage ? \"HF_MSG\" : \"\"\n    }`\n  }));\n  const tasks = orderBy(filterTasks, sort.by, sort.order);\n\n  const handleSort = col => {\n    const temp = sort.by === col && sort.order === \"asc\" ? \"desc\" : \"asc\";\n    setSort({ by: col, order: temp });\n  };\n\n  const getData = async () => {\n    setLoading(true);\n    const { data: resData = {} } = await APICaller({\n      method: \"GET\",\n      reqUrl: \"/api/v1/task/list\"\n    });\n    setdata(resData);\n    setLoading(false);\n  };\n\n  const getProcesStateData = async () => {\n    const { data: resData = {} } = await APICaller({\n      method: \"GET\",\n      reqUrl: \"/api/v1/task/processStats\"\n    });\n    setBotState(resData);\n  };\n\n  const getCategoryData = async () => {\n    setCategories(getCatFromLocalStorage().categories);\n    setCatLoading(true);\n    const { data: resData = {} } = await APICaller({\n      method: \"GET\",\n      reqUrl: \"/api/v1/category/list\"\n    });\n    setCategories(resData.categories || []);\n    setCatFromLocalStorage(resData);\n    setCatLoading(false);\n  };\n\n  useEffect(() => {\n    getCategoryData();\n    getData();\n    getProcesStateData();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (isActive && !loading) {\n      const refreshTime = isEmpty(botState) ? 30 * 1000 : 10 * 1000;\n      const timer = setTimeout(getProcesStateData, refreshTime);\n      return () => clearTimeout(timer);\n    }\n  }, [botState, isActive, loading]);\n\n  const startTask = async (numberOfTimes = 1) => {\n    try {\n      setLoading(true);\n      let selectedTask = tasks.filter(e => selectedItems.includes(e._id));\n      selectedTask = numberOfTimes !== 1 ? selectedTask.map(el => ({ ...el, numberOfTimes })) : selectedTask;\n      const [finalArr, pageSize] = splitArray(selectedTask);\n      for (const iterator of finalArr) {\n        try {\n          const activeIndex = finalArr.indexOf(iterator);\n          setLoadingText(`Starting bot on ${activeIndex * pageSize}/${selectedTask.length}`);\n          const { data } = await APICaller({\n            method: \"POST\",\n            reqUrl: \"/api/v1/task/start\",\n            data: iterator\n          });\n          console.log(\"tasks response===\", data);\n        } catch (error) {\n          // setLoadingText(`Starting bot on ${1 * pageSize}/${selectedTask.length}`);\n        }\n      }\n      setLoading(false);\n      setLoadingText(\"Loading...\");\n      getData();\n    } catch (error) {\n      setLoading(false);\n      getData();\n    }\n  };\n\n  const selectFilters = ({ typeLink, clearAll = false }) => {\n    setSelectedItems([]);\n    console.log(\"typeLink, clearAll\", typeLink, clearAll);\n    const isSelected = filters.includes(typeLink);\n    if (clearAll) {\n      setfilters(isSelected ? [] : [typeLink]);\n    } else if (isSelected) {\n      setfilters(filters.filter(el => el !== typeLink));\n    } else {\n      setfilters([...filters, typeLink]);\n    }\n  };\n\n  console.log(\"filters\", filters);\n  return (\n    <main>\n      <div className=\"content\">\n        <div className=\"d-flex\">\n          <div className=\"d-flex flex-1\">\n            <h1>Tasks List</h1>\n            <button style={{ marginLeft: 20 }} className=\"danger\" onClick={getData}>\n              Refresh\n            </button>\n          </div>\n          {!!selectedItems.length && (\n            <button disabled={loading} onClick={startTask.bind(this, 1)}>\n              {`Send ${selectedItems.length} chats`}\n            </button>\n          )}\n          {!!selectedItems.length && (\n            <button disabled={loading} onClick={startTask.bind(this, 2)}>\n              {`2xSend ${selectedItems.length} chats`}\n            </button>\n          )}\n          <button onClick={() => history.push(\"/task/upsert\")}>Add</button>\n        </div>\n        <BotState botState={botState} />\n        <div className=\"d-flex align-center\" style={{ padding: \"15px 0px\" }}>\n          <div>Filters: </div>\n          <button className={filters.includes(\"mdisk\") ? \"\" : \"outline\"} onClick={selectFilters.bind(this, { typeLink: \"mdisk\" })}>\n            Mdisk\n          </button>\n          <button className={filters.includes(\"vivdisk\") ? \"\" : \"outline\"} onClick={selectFilters.bind(this, { typeLink: \"vivdisk\" })}>\n            Vivdisk\n          </button>\n          <button className={filters.includes(\"terabox\") ? \"\" : \"outline\"} onClick={selectFilters.bind(this, { typeLink: \"terabox\" })}>\n            Terabox\n          </button>\n          <button\n            className={filters.includes(\"processing\") ? \"\" : \"outline\"}\n            onClick={selectFilters.bind(this, { typeLink: \"processing\", clearAll: true })}\n          >\n            processing\n          </button>\n        </div>\n        <table className=\"task\">\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.length === tasks.length}\n                  onChange={e => {\n                    setSelectedItems(e.target.checked ? tasks.map(e => e._id) : []);\n                  }}\n                />\n              </th>\n              <th>S.No</th>\n              <th onClick={() => handleSort(\"groupInfo.title\")}>Group Name</th>\n              <th onClick={() => handleSort(\"membersCount\")}>S count</th>\n              <th onClick={() => handleSort(\"category\")}>Category</th>\n              <th onClick={() => handleSort(\"size\")}>Size</th>\n              <th onClick={() => handleSort(\"page\")}>Send Page</th>\n              <th onClick={() => handleSort(\"pageIncrementor\")}>Page Incrementor</th>\n              <th onClick={() => handleSort(\"channelName\")}>Channel Name</th>\n              <th onClick={() => handleSort(\"linkType\")}>link Type</th>\n              <th onClick={() => handleSort(\"cname\")}>Cname</th>\n              <th onClick={() => handleSort(\"flags\")}>Flags</th>\n              <th onClick={() => handleSort(\"lastExecuted\")}>Last Executed</th>\n              <th onClick={() => handleSort(\"status\")}>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks &&\n              tasks.map((el, index) => (\n                <tr key={`tassk-${index}`}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedItems.includes(el._id)}\n                      onChange={e => {\n                        setSelectedItems(e.target.checked ? [...selectedItems, el._id] : selectedItems.filter(e => e !== el._id));\n                      }}\n                    />\n                  </td>\n                  <td>{index + 1}</td>\n                  <td\n                    className={`cursor-pointer text-primary ${el?.groupInfo.username ? \"public-channel\": '' }`}\n                    onClick={() => {\n                      window.open(el?.groupInfo?.invite_link.replace(\"t.me\", \"telegram.dog\"), \"_blank\");\n                    }}\n                  >{`${el?.groupInfo?.title} (${el?.groupInfo?.id.toString().slice(4)}) ${el?.groupInfo.username || \"\"} \\n`}</td>\n                  <td>{el.membersCount || \"\"}</td>\n                  <td>{el.categoryState.map(e => `${catObj[e.category]} \\n`)}</td>\n                  <td>{el.categoryState.reduce((ac, e) => ac + +e.size, 0)}</td>\n                  <td>\n                    {el.categoryState.map(e => (\n                      <div>{e.page}</div>\n                    ))}\n                  </td>\n                  <td>\n                    {el.categoryState.map(e => (\n                      <div>{e.pageIncrementor}</div>\n                    ))}\n                  </td>\n                  <td>{el.channelName}</td>\n                  <td>{el.linkType}</td>\n                  <td>{el.cname}</td>\n                  <td>{el.flags}</td>\n                  <td>{el.lastExecuted && getTimeStr(el.lastExecuted)}</td>\n                  <td>\n                    <>\n                      {/* <button\n                          disabled={loading}\n                          onClick={async () => {\n                            try {\n                              setLoading(true);\n                              const { data } = await axios.post(\"/api/v1/task/start\", [el]);\n                              console.log(\"start response===\", data);\n                              setLoading(false);\n                            } catch (error) {\n                              setLoading(false);\n                            }\n                          }}\n                        >\n                          Start\n                        </button> */}\n                      <button\n                        className=\"btn icon-only\"\n                        onClick={() =>\n                          history.push({\n                            pathname: \"/task/upsert\",\n                            state: el\n                          })\n                        }\n                      >\n                        Edit\n                      </button>\n                      <div>{el.status === \"active\" ? \"\" : el.status}</div>\n                    </>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n        {(loading || catLoading) && (\n          <div className=\"d-flex loading-box\">\n            <div className=\"loading-div\"></div>\n            <div>{loadingText}</div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Input({ label, labelProps, wrapperClass, onChange, id, options = [], ...props }) {\n  return (\n    <div className={`form-group ${wrapperClass ? wrapperClass : \"\"}`}>\n      <label htmlFor={id}>{label}</label>\n      <select className=\"form-control\" {...props} id={id} onChange={e => onChange(e.target.value)}>\n        {options.map(el => (\n          <option key={`option-${el.value}`} value={el.value}>\n            {el.label || el.value}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  onChange: text => console.log(\"Value: \", text)\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelProps: PropTypes.object,\n  wrapperClass: PropTypes.string,\n  type: PropTypes.oneOf([\"text\", \"password\", \"number\"]),\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool\n};\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport { getCatFromLocalStorage } from \"../utils/methods\";\n\nlet catOptions = [\n  { label: \"1Webseries\", value: \"1\" },\n  { label: \"2English\", value: \"2\" },\n  { label: \"3English Premium\", value: \"3\" },\n  { label: \"4Desi\", value: \"4\" },\n  { label: \"5English Bulk\", value: \"5\" },\n  { label: \"6Tango&onlyfans\", value: \"6\" },\n  { label: \"7-18+\", value: \"7\" }\n];\n\nexport const defaultCatState = {\n  category: catOptions[3].value,\n  size: \"20\",\n  page: \"0\",\n  pageIncrementor: \"2\",\n  isRealImage: false\n};\n\nconst CategorySelector = props => {\n  const { defaultState, handleCategoryState, index, isLastElement, handleDeleteCatagory, isThumbActive = false } = props;\n\n  const tempObj = getCatFromLocalStorage();\n  catOptions = tempObj?.categories && tempObj?.categories.length ? tempObj?.categories : catOptions;\n  const [category, setCategory] = useState(defaultState.category || catOptions[0].value);\n  const [size, setSize] = useState(defaultState.size || \"40\");\n  const [page, setPage] = useState(defaultState.page || \"0\");\n  const [pageIncrementor, setPageIncrementor] = useState(defaultState.pageIncrementor || \"2\");\n  const [isRealImage, setIsRealImage] = useState(!!defaultState.isRealImage);\n\n  useEffect(() => {\n    handleCategoryState({ category, size, page, pageIncrementor, isRealImage }, index);\n    // eslint-disable-next-line\n  }, [category, size, page, pageIncrementor, isRealImage]);\n\n  return (\n    <div className=\"category-select\">\n      <Select id=\"category\" name=\"category\" label=\"Category\" options={catOptions} value={category} onChange={setCategory} required />\n      <Input id=\"size\" max=\"100\" name=\"size\" label=\"Size(Number of messages)\" value={size} onChange={setSize} required type=\"number\" />\n      <Input id=\"page\" name=\"page\" label=\"Send Page\" value={page} onChange={setPage} required type=\"number\" />\n      <Input\n        id=\"pageIncrementor\"\n        name=\"pageIncrementor\"\n        label=\"Page Increment Factor\"\n        value={pageIncrementor}\n        onChange={setPageIncrementor}\n        required\n        type=\"number\"\n      />\n      {isThumbActive && (\n        <div style={{ paddingBottom: 20 }}>\n          <input type=\"checkbox\" id=\"isRealImage\" name=\"isRealImage\" checked={isRealImage} onChange={() => setIsRealImage(!isRealImage)} />\n          <label htmlFor=\"isRealImage\">Send real images</label>\n        </div>\n      )}\n\n      <div className=\"category-select-actions\">\n        {(!index ? !isLastElement : true) && (\n          <button className={`btn danger `} onClick={handleDeleteCatagory.bind(this, index)} type=\"button\">\n            Delete\n          </button>\n        )}\n\n        {isLastElement && (\n          <button className={`btn outline `} onClick={handleCategoryState.bind(this, defaultCatState)} type=\"button\">\n            Add More Category\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default CategorySelector;\n","import React, { useState, useEffect } from \"react\";\nimport APICaller from \"../utils/APICaller\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport CategorySelector, { defaultCatState } from \"../components/CategorySelector\";\n\nimport isEmpty from \"lodash/isEmpty\";\nimport isEqual from \"lodash/isEqual\";\nimport { getCatFromLocalStorage } from \"../utils/methods\";\n\nconst defaultLinkOptions = [{ value: \"mdisk\" }, { value: \"dood\" }, { value: \"vivdisk\" }, { value: \"terabox\" }];\n\nexport default function DriveHelp() {\n  const history = useHistory();\n  const location = useLocation();\n  const locationState = location?.state || {};\n\n  const [linkOptions, setLinkOptions] = useState(defaultLinkOptions);\n\n  const [groupId, setGroupId] = useState(locationState.groupInfo?.id || \"\");\n  const [groupInfo, setGroupInfo] = useState(locationState.groupInfo || {});\n\n  const [categoryState, setCategoryState] = useState(locationState.categoryState || [defaultCatState]);\n\n  const [channelName, setChannelName] = useState(locationState.channelName || \"primexmov\");\n  const [backupChannelLink, setBackupChannelLink] = useState(locationState.backupChannelLink || \"\");\n\n  const [linkType, setLinkType] = useState(locationState.linkType || linkOptions[0].value);\n\n  useEffect(() => {\n    const isMainBot = getCatFromLocalStorage().isMainBot;\n    if (isMainBot) {\n      setLinkOptions([...defaultLinkOptions, { value: \"ios-content\" }]);\n    }\n  }, []);\n\n  const [thumbActive, setThumbActive] = useState(!!locationState.thumbUrl || false);\n  const [thumbUrl, setThumbUrl] = useState(\n    locationState.thumbUrl || \"https://drive.google.com/uc?export=view&id=1GK6SH3Kwgu-Nwr4ilQPyiKuk26tbZmxb\"\n  );\n  const handleSetThumbUrl = el => {\n    setThumbActive(el);\n    if (el) {\n      setCategoryState(categoryState.map(el => ({ ...el, isRealImage: false })));\n    } else {\n      setCategoryState(\n        categoryState.map(el => {\n          delete el.isRealImage;\n          return { ...el };\n        })\n      );\n    }\n  };\n  const [isCustomCname, setIsCustomCname] = useState(locationState.cname ? locationState.cname !== \"v1\" : false);\n  const [cname, setCname] = useState(locationState.cname || \"v1\");\n\n  // eslint-disable-next-line\n  const [isEuOrgLink, setIsEuOrgLink] = useState(locationState.groupInfo ? locationState.isEuOrgLink : true);\n  const [isNewMdisk, setIsNewMdisk] = useState(locationState.groupInfo ? locationState.isNewMdisk : false);\n\n  // useCustomMessage\n  const [useCustomMessage, setCustomMessage] = useState(locationState.useCustomMessage ? locationState.useCustomMessage : false);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleCategoryState = (newCat, index) => {\n    const newCategoryState = [...categoryState];\n    if (typeof index === \"number\") {\n      newCategoryState[index] = newCat;\n    } else {\n      newCategoryState.push(newCat);\n    }\n    setCategoryState(newCategoryState);\n  };\n\n  const handleDeleteCatagory = index => {\n    const newCategoryState = categoryState.filter((el, i) => i !== index);\n    setCategoryState(newCategoryState);\n  };\n\n  const onSubmit = async e => {\n    if (e) e.preventDefault();\n    if (isEmpty(groupInfo)) {\n      setError(\"Click on get info after passing groupId\");\n      return false;\n    }\n    setLoading(true);\n    const params = {\n      groupInfo,\n      categoryState,\n      channelName,\n      backupChannelLink,\n      linkType,\n      isNewMdisk,\n      isEuOrgLink,\n      useCustomMessage\n    };\n    params.thumbUrl = thumbActive ? thumbUrl : \"\";\n    params.cname = isCustomCname ? cname : \"\";\n\n    console.log(\"sfsfsf\", params);\n    try {\n      if (locationState._id) {\n        if (params.groupInfo === locationState.groupInfo && params.groupInfo) delete params.groupInfo;\n        if (params.channelName === locationState.channelName && params.channelName) delete params.channelName;\n        if (params.backupChannelLink === locationState.backupChannelLink && params.backupChannelLink) delete params.backupChannelLink;\n        if (params.linkType === locationState.linkType && params.linkType) delete params.linkType;\n        if (thumbActive && params.thumbUrl === locationState.thumbUrl) delete params.thumbUrl;\n        if (params.isNewMdisk === locationState.isNewMdisk) delete params.isNewMdisk;\n        if (params.useCustomMessage === locationState.useCustomMessage) delete params.useCustomMessage;\n        if (params.isEuOrgLink === locationState.isEuOrgLink) delete params.isEuOrgLink;\n        if (isEqual(params.categoryState, locationState.categoryState)) delete params.categoryState;\n        if (isEmpty(params)) {\n          setLoading(false);\n          return;\n        }\n        params._id = locationState._id;\n        const { data } = await APICaller({\n          method: \"POST\",\n          reqUrl: \"/api/v1/task/update\",\n          data: params\n        });\n        console.log(\"update response==\", data);\n        if (data) {\n          history.push(\"/task\");\n        }\n        setLoading(false);\n      } else {\n        const { data } = await APICaller({\n          method: \"POST\",\n          reqUrl: \"/api/v1/task/add\",\n          data: params\n        });\n        console.log(\"api response===\", data);\n        if (data) {\n          history.push(\"/task\");\n        }\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(\"api error\", error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"content\">\n        <h1>Gdrive token generator</h1>\n        <form onSubmit={onSubmit}>\n          <Select id=\"linkType\" name=\"linkType\" label=\"Link Type\" options={linkOptions} value={linkType} onChange={setLinkType} required />\n          <Input id=\"groupId\" name=\"groupId\" label=\"Group Id\" value={groupId} onChange={setGroupId} required />\n          <div className=\"d-flex\" style={{ alignItems: \"center\" }}>\n            <button\n              disabled={loading}\n              onClick={async () => {\n                try {\n                  setLoading(true);\n                  const { data: telegramData = {} } = await APICaller({\n                    method: \"GET\",\n                    reqUrl: \"/api/v1/task/telegramget\",\n                    data: {\n                      url: `https://api.telegram.org/bot_bot_token_/getChat?chat_id=${groupId}`\n                    }\n                  });\n                  console.log(\"api response===\", telegramData);\n                  setGroupInfo(telegramData.data.result);\n                  setLoading(false);\n                } catch (error) {\n                  setLoading(false);\n                  setGroupInfo({});\n                }\n              }}\n            >\n              {loading ? \"Loading...\" : \"Get Chat Info\"}\n            </button>\n            <div style={{ flex: 1 }}>\n              <Input id=\"groupName\" name=\"groupName\" label=\"\" value={groupInfo.title} disabled />\n            </div>\n          </div>\n          <Input\n            id=\"channelName\"\n            name=\"channelName\"\n            label=\"Channel Name(without @)\"\n            value={channelName}\n            onChange={setChannelName}\n            required\n          />\n          <Input\n            id=\"backupChannelLink\"\n            name=\"backupChannelLink\"\n            label=\"Backup Channel Link\"\n            value={backupChannelLink}\n            onChange={setBackupChannelLink}\n          />\n          <div style={{ paddingBottom: 20 }}>\n            <input type=\"checkbox\" id=\"isNewMdisk\" name=\"isNewMdisk\" checked={isNewMdisk} onChange={() => setIsNewMdisk(!isNewMdisk)} />\n            <label htmlFor=\"isNewMdisk\">Convert New mdisk links by bot</label>\n          </div>\n          <div style={{ paddingBottom: 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"useCustomMessage\"\n              name=\"useCustomMessage\"\n              checked={useCustomMessage}\n              onChange={() => setCustomMessage(!useCustomMessage)}\n            />\n            <label htmlFor=\"useCustomMessage\">Use bot Custom Message with header+footer</label>\n          </div>\n\n          <div style={{ paddingBottom: 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"isEuOrgLink\"\n              name=\"isEuOrgLink\"\n              checked={isEuOrgLink}\n              onChange={() => setIsEuOrgLink(!isEuOrgLink)}\n            />\n            <label htmlFor=\"isEuOrgLink\">Get mdisk.eu.org links</label>\n          </div>\n          <div style={{ paddingBottom: thumbActive ? 5 : 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"thumbActive\"\n              name=\"thumbActive\"\n              checked={thumbActive}\n              onChange={() => handleSetThumbUrl(!thumbActive)}\n            />\n            <label htmlFor=\"thumbActive\">Add Thumb image to message</label>\n          </div>\n          {thumbActive && <Input id=\"thumbUrl\" name=\"thumbUrl\" label=\"\" value={thumbUrl} onChange={setThumbUrl} />}\n          <div style={{ paddingBottom: isCustomCname ? 5 : 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"isCustomCname\"\n              name=\"isCustomCname\"\n              checked={isCustomCname}\n              onChange={() => setIsCustomCname(!isCustomCname)}\n            />\n            <label htmlFor=\"isCustomCname\">Use Custom cname</label>\n          </div>\n          {isCustomCname && <Input id=\"cname\" name=\"cname\" label=\"\" value={cname} onChange={setCname} />}\n          {categoryState.map((el, index) => (\n            <CategorySelector\n              key={index}\n              index={index}\n              defaultState={el}\n              handleCategoryState={handleCategoryState}\n              isLastElement={categoryState.length - 1 === index}\n              handleDeleteCatagory={handleDeleteCatagory}\n              isThumbActive={thumbActive}\n            />\n          ))}\n          {error && <div style={{ color: \"red\" }}>{error}</div>}\n          <div\n            className=\"d-flex\"\n            style={{\n              justifyContent: \"space-between\"\n            }}\n          >\n            <button disabled={loading} className={`btn primary${loading ? \" loading\" : \"\"}`} type=\"submit\">\n              {locationState._id ? \"Update Task\" : \"Insert Task\"}\n            </button>\n\n            {locationState._id && (\n              <button\n                disabled={loading}\n                className=\"btn danger\"\n                onClick={async () => {\n                  setLoading(true);\n                  try {\n                    const params = { isDeleted: true };\n                    params._id = locationState._id;\n                    const { data } = await APICaller({\n                      method: \"POST\",\n                      reqUrl: \"/api/v1/task/update\",\n                      data: params\n                    });\n                    console.log(\"Delete response==\", data);\n                    if (data) {\n                      history.push(\"/task\");\n                    }\n                    setLoading(false);\n                  } catch (error) {\n                    setLoading(false);\n                  }\n                }}\n              >\n                Delete\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport orderBy from \"lodash/orderBy\";\nimport { splitArray } from \"../utils\";\n\nconst getTimeStr = date => {\n  const dateObj = new Date(date);\n  return `${dateObj.toLocaleTimeString()} ${dateObj.toLocaleDateString()}`;\n};\n\nexport default function JoinRequests() {\n  const [data, setdata] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [filter, setfilter] = useState(\"\");\n  const [loadingText, setLoadingText] = useState(\"Loading...\");\n\n  // const [pageLimit, setPageLimit] = useState(\"100\");\n\n  // ['asc', 'desc']\n  const [sort, setSort] = useState({ by: \"\", order: \"asc\" });\n\n  const { joinRequests: allJoinRequests = [] } = data;\n  // filter ? allJoinRequests.filter(e => moment().diff(moment(e.created), \"days\") >= parseInt(filter)) :\n  const filterTasks = allJoinRequests;\n  const tasks = orderBy(filterTasks, sort.by, sort.order);\n\n  const handleSort = col => {\n    const temp = sort.by === col && sort.order === \"asc\" ? \"desc\" : \"asc\";\n    setSort({ by: col, order: temp });\n  };\n\n  const getData = async () => {\n    setLoading(true);\n    const dayfilter = parseInt(filter);\n    const newDate = moment().add(\"days\", -dayfilter);\n    const getDateFilter = filter ? { created: newDate.format(\"YYYY-MM-DD\") } : {};\n    const { data: resData = {} } = await axios.post(\"/api/v1/chatjoin/all\", { action: \"list\", data: getDateFilter });\n    setdata(resData.data);\n    setLoading(false);\n  };\n\n  const handleFilters = el => {\n    setfilter(el);\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [filter]);\n\n  const onClickApproveRequest = async (endpoint = \"/approve\") => {\n    try {\n      setLoading(true);\n      const selectedTask = tasks.filter(e => selectedItems.includes(e._id));\n      const [finalArr, pageSize] = splitArray(selectedTask);\n\n      for (const iterator of finalArr) {\n        try {\n          const activeIndex = finalArr.indexOf(iterator);\n          setLoadingText(`Accepting request ${activeIndex * pageSize}/${selectedTask.length}`);\n          const { data: approveData = {} } = await axios.post(`/api/v1/chatjoin${endpoint}`, {\n            requests: iterator\n          });\n          console.log(\"Approve response===\", approveData);\n        } catch (error) {\n          // setLoadingText(`Starting bot on ${1 * pageSize}/${selectedTask.length}`);\n        }\n      }\n      setLoading(false);\n      setLoadingText(\"Loading...\");\n      getData();\n    } catch (error) {\n      setLoading(false);\n      getData();\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"content\">\n        <div className=\"d-flex\">\n          <div className=\"d-flex flex-1\">\n            <h1>Requests List</h1>\n            <button style={{ marginLeft: 20 }} className=\"danger\" onClick={getData}>\n              Refresh\n            </button>\n          </div>\n          {!!selectedItems.length && (\n            <>\n              <button disabled={loading} style={{ marginRight: 5 }} onClick={() => onClickApproveRequest()}>\n                {`Approve ${selectedItems.length} requests`}\n              </button>\n              <button disabled={loading} onClick={() => onClickApproveRequest(\"/approveandclear\")}>\n                {`ApproveClear ${selectedItems.length} requests`}\n              </button>\n            </>\n          )}\n        </div>\n        <div className=\"d-flex align-center\" style={{ padding: \"15px 0px\" }}>\n          <div>Filters: </div>\n          <button\n            className={filter === \"1DAY\" ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              handleFilters(filter === \"1DAY\" ? \"\" : \"1DAY\");\n            }}\n          >\n            1 day ago\n          </button>\n          <button\n            className={filter === \"2DAY\" ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              handleFilters(filter === \"2DAY\" ? \"\" : \"2DAY\");\n            }}\n          >\n            2 day ago\n          </button>\n        </div>\n        <table className=\"task\">\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.length === tasks.length}\n                  onChange={e => {\n                    setSelectedItems(e.target.checked ? tasks.map(e => e._id) : []);\n                  }}\n                />\n              </th>\n              <th>S.No</th>\n              <th onClick={() => handleSort(\"from.id\")}>User Id</th>\n              <th onClick={() => handleSort(\"from.first_name\")}>First Name</th>\n              <th onClick={() => handleSort(\"chat.title\")}>Chat</th>\n              <th onClick={() => handleSort(\"created\")}>Created</th>\n              <th onClick={() => handleSort(\"status\")}>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks &&\n              tasks.map((el, index) => (\n                <tr key={`tassk-${index}`}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedItems.includes(el._id)}\n                      onChange={e => {\n                        setSelectedItems(e.target.checked ? [...selectedItems, el._id] : selectedItems.filter(e => e !== el._id));\n                      }}\n                    />\n                  </td>\n                  <td>{index + 1}</td>\n                  <td>{el.from.id}</td>\n                  <td>{el.from.first_name}</td>\n                  <td>{el.chat.title}</td>\n                  <td>{el.created && getTimeStr(el.created)}</td>\n                  <td>\n                    <>\n                      <button\n                        disabled={loading}\n                        onClick={async () => {\n                          try {\n                            setLoading(true);\n                            const { data: approveData = {} } = await axios.post(\"/api/v1/chatjoin/reject\", {\n                              requests: [el]\n                            });\n                            console.log(\"reject response===\", approveData);\n                            setLoading(false);\n                          } catch (error) {\n                            setLoading(false);\n                          }\n                        }}\n                      >\n                        Reject\n                      </button>\n                      <button\n                        className=\"btn\"\n                        disabled={loading}\n                        onClick={async () => {\n                          try {\n                            setLoading(true);\n                            const { data: approveData = {} } = await axios.post(\"/api/v1/chatjoin/approve\", {\n                              requests: [el]\n                            });\n                            console.log(\"Approve response===\", approveData);\n                            setLoading(false);\n                          } catch (error) {\n                            setLoading(false);\n                          }\n                        }}\n                      >\n                        Approve\n                      </button>\n                      {/* <div>{el.status === \"active\" ? \"\" : el.status}</div> */}\n                    </>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n        {/* <div className=\"pagination\">\n          <select onSelect={el => console.log(el)} value={pageLimit}>\n            <option value=\"100\">100</option>\n            <option value=\"200\">200</option>\n            <option value=\"500\">500</option>\n          </select>\n        </div> */}\n        {loading && (\n          <div className=\"d-flex loading-box\">\n            <div className=\"loading-div\"></div>\n            <div>{loadingText}</div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React, { useState } from \"react\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\n\nconst linkOptions = [{ value: \"mdisk\" }, { value: \"dood\" }, { value: \"vivdisk\" }, { value: \"terabox\" }];\n\nexport default function DriveHelp() {\n  const [linkType, setLinkType] = useState(linkOptions[0].value);\n  const [sucessMsg, setSucessMsg] = useState(\"\");\n\n  const [thumbUrl, setThumbUrl] = useState(\"https://drive.google.com/uc?export=view&id=1GK6SH3Kwgu-Nwr4ilQPyiKuk26tbZmxb\");\n  const [textMessage, setTextMessage] =\n    useState(`Friends Now a days Telegram Is Banning Many Movies Channels. Our Channels Also Got Banned. So, Please Join This Backup Channel For Future Update.\n\nIf Telegram Ban Our Channel We Will Give You New Channel Link On This Channel.\n  \n  \nदोस्तों आजकल टेलीग्राम कई चैनलों पर प्रतिबंध लगा रहा है। हमारे कई चैनलों पर भी प्रतिबंध लगा दिया। इसलिए, भविष्य के अपडेट के लिए कृपया इस बैकअप चैनल से जुड़ें। \n      \nयदि टेलीग्राम द्वारा हमारे चैनल पर प्रतिबंध लगाया गया तो हम आपको इस चैनल पर नए चैनल लिंक देंगे ।\n      \n👇👇👇👇👇👇👇👇👇👇👇👇   \n🔋🔋\nChannel:-\n_CHANNEL_\n_CHANNEL_\n_CHANNEL_\n🔋🔋🔋`);\n\n  return (\n    <main>\n      <div className=\"content\">\n        <h1>Gdrive token generator</h1>\n        <form>\n          <Select id=\"linkType\" name=\"linkType\" label=\"Link Type\" options={linkOptions} value={linkType} onChange={setLinkType} required />\n\n          <Input id=\"thumbUrl\" name=\"thumbUrl\" label=\"ThumbUrl\" value={thumbUrl} onChange={setThumbUrl} />\n\n          <textarea\n            style={{ width: \"100%\" }}\n            id=\"textMessage\"\n            rows=\"20\"\n            name=\"textMessage\"\n            label=\"\"\n            value={textMessage}\n            onChange={e => setTextMessage(e.target.value)}\n          />\n\n          <div\n            className=\"d-flex\"\n            style={{\n              justifyContent: \"space-between\"\n            }}\n          >\n            <div className=\"d-flex align-items-center\">\n              <button\n                disabled={!textMessage || sucessMsg}\n                className={`btn primary`}\n                type=\"submit\"\n                onClick={e => {\n                  e.preventDefault();\n                  const encodThumbUrl = encodeURIComponent(thumbUrl);\n                  const encodesMessage = encodeURIComponent(textMessage);\n                  const finalLink = `${window.location.origin}/api/v1/task/backupMessage?linkType=${linkType}${\n                    thumbUrl ? \"&thumbUrl=\" + encodThumbUrl : \"\"\n                  }&text=${encodesMessage}`;\n                  console.log(finalLink);\n                  navigator.clipboard.writeText(finalLink);\n                  setSucessMsg(\"Copied the link\");\n                  setInterval(() => {\n                    setSucessMsg(\"\");\n                  }, 6000);\n                }}\n              >\n                Copy Link\n              </button>\n              {sucessMsg && <div style={{ color: \"green\", fontWeight: \"bold\" }}>{sucessMsg}</div>}\n            </div>\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./screens/Home\";\nimport DriveHelp from \"./screens/DriveHelp\";\nimport Task from \"./screens/Task\";\nimport AddTask from \"./screens/AddTask\";\nimport JoinRequests from \"./screens/JoinRequests\";\nimport CreateLink from \"./screens/CreateLink\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/search\">\n          <Home tab=\"search\" />\n        </Route>\n        <Route path=\"/drive/:folderId?\">\n          <Home tab=\"drive\" />\n        </Route>\n        <Route exact path=\"/download\">\n          <Home tab=\"downloads\" />\n        </Route>\n        <Route exact path=\"/drivehelp\" component={DriveHelp} />\n        <Route exact path=\"/task\" component={Task} />\n        <Route exact path=\"/task/upsert\" component={AddTask} />\n        <Route exact path=\"/requests\" component={JoinRequests} />\n        <Route exact path=\"/createLink\" component={CreateLink} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Navbar from \"./components/Navbar\";\nimport App from \"./App\";\nimport \"./assets/css/index.css\";\nimport \"./assets/css/helpers.css\";\nimport \"./assets/css/navbar.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Input({ label, labelProps, wrapperClass, onChange, id, ...props }) {\n  return (\n    <div className={`form-group ${wrapperClass ? wrapperClass : \"\"}`}>\n      <label htmlFor={id}>{label}</label>\n      <input className=\"form-control\" id={id} onChange={e => onChange(e.target.value)} {...props} />\n    </div>\n  );\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  onChange: text => console.log(\"Value: \", text)\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelProps: PropTypes.object,\n  wrapperClass: PropTypes.string,\n  type: PropTypes.oneOf([\"text\", \"password\", \"number\"]),\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\n\nexport default function NightModeToggle() {\n  let localStored = false;\n  if (process.browser) {\n    localStored = localStorage.getItem(\"nightMode\") === \"true\";\n  }\n\n  const [nightMode, setNightMode] = useState(localStored);\n\n  if (process.browser) {\n    if (nightMode) {\n      document.body.classList.add(\"dark\");\n      localStorage.setItem(\"nightMode\", true);\n    } else {\n      document.body.classList.remove(\"dark\");\n      localStorage.setItem(\"nightMode\", false);\n    }\n  }\n\n  return (\n    <button className=\"btn mv-auto sm neutral\" onClick={() => setNightMode(!nightMode)}>\n      <span className=\"bnt-icon\">\n        <ion-icon name=\"moon\" />\n      </span>\n    </button>\n  );\n}\n"],"sourceRoot":""}