{"version":3,"sources":["components/Picker.js","components/SearchItem.js","screens/Search.js"],"names":["Picker","label","labelProps","wrapperClass","onChange","id","options","props","className","htmlFor","e","target","value","map","opt","key","name","defaultProps","text","console","log","SearchItem","result","site","api","useState","loading","setLoading","response","setResponse","loadDetails","fetch","link","res","status","error","errorMessage","json","seeds","details","torrent","onClick","disabled","i","infoText","infoTitle","href","downloadLink","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","Search","term","setTerm","setSite","search","preventDefault","onSubmit","required","Input","placeholder","type","results","length"],"mappings":"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","file":"static/js/6.f7da1dee.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Picker({ label, labelProps, wrapperClass, onChange, id, options, ...props }) {\n  return (\n    <div className={`form-group${wrapperClass ? ` ${wrapperClass}` : \"\"}`}>\n      <label htmlFor={id} {...labelProps}>\n        {label}\n      </label>\n      <select className=\"form-control\" id={id} onChange={e => onChange(e.target.value)} {...props}>\n        <option>Select one</option>\n        {options &&\n          options.map(opt => (\n            <option value={opt.value} key={opt.value}>\n              {opt.name}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n}\n\nPicker.defaultProps = {\n  onChange: text => console.log(\"Value: \", text)\n};\n\nPicker.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelProps: PropTypes.object,\n  wrapperClass: PropTypes.string,\n  onChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  required: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape({ value: PropTypes.string.isRequired, name: PropTypes.string.isRequired }))\n    .isRequired\n};\n\nexport default Picker;\n","import React, { useState } from \"react\";\n\nfunction SearchItem({ result, site, api }) {\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState({});\n\n  const loadDetails = async () => {\n    setLoading(true);\n\n    const res = await fetch(api + \"api/v1/details/\" + site + \"?query=\" + result.link);\n    if (res.status !== 200) {\n      setResponse({ error: true, errorMessage: \"Cannot connect to site\" });\n    } else {\n      const response = await res.json();\n      setResponse({ ...response });\n    }\n\n    setLoading(false);\n  };\n\n  const copyToClipboard = () => {\n    const str = response.torrent.downloadLink;\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h2>{result.name}</h2>\n        <div className=\"text-primary text-400\">Seeds: {result.seeds}</div>\n        <div className=\"text-400\">{result.details}</div>\n        {!response.torrent && (\n          <button onClick={loadDetails} disabled={loading} className={`btn primary${loading ? \" loading\" : \"\"}`}>\n            Load details\n          </button>\n        )}\n        {response.error && <div className=\"text-danger\">{response.errorMessage}</div>}\n        {response.torrent && (\n          <div className=\"mt-1\">\n            {response.torrent.details.map(({ infoText, infoTitle }, i) => (\n              <div className=\"d-flex space-between\" key={i}>\n                <div className=\"text-400\">{infoTitle}</div>\n                <div className=\"text-300\">{infoText}</div>\n              </div>\n            ))}\n            <a href={response.torrent.downloadLink} className=\"btn warning m-0 mt-1\">\n              Download\n            </a>\n            <button onClick={copyToClipboard} className=\"btn primary m-0 ml-1 mt-1\">\n              Copy link\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchItem;\n","import React, { useState } from \"react\";\nimport Input from \"../components/Input\";\nimport Picker from \"../components/Picker\";\nimport SearchItem from \"../components/SearchItem\";\n\nfunction Search({ api }) {\n  const [term, setTerm] = useState(\"\");\n  const [site, setSite] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState({});\n\n  const search = async e => {\n    if (e) e.preventDefault();\n    setLoading(true);\n\n    if (term !== \"\") {\n      const res = await fetch(api + \"api/v1/search/\" + site + \"?query=\" + term);\n      if (res.status !== 200) {\n        setResponse({\n          error: true,\n          errorMessage: \"Cannot connect to site\"\n        });\n      } else {\n        const response = await res.json();\n        setResponse(response);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <h1>Search</h1>\n      <form onSubmit={search}>\n        <Picker\n          id=\"site\"\n          name=\"site\"\n          label=\"Select site\"\n          value={site}\n          onChange={setSite}\n          options={[\n            { name: \"1337x\", value: \"1337x\" },\n            { name: \"Limetorrents\", value: \"limetorrent\" },\n            { name: \"Piratebay\", value: \"piratebay\" }\n          ]}\n          required\n        />\n        <Input\n          id=\"term\"\n          name=\"term\"\n          label=\"Search Term\"\n          placeholder=\"The forgotten army, Flames...\"\n          value={term}\n          onChange={setTerm}\n          required\n        />\n        <button disabled={loading || !site} className={`btn primary${loading ? \" loading\" : \"\"}`} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"d-flex-column mv-1\">\n        {response.error && <div className=\"text-danger\">{response.errorMessage}</div>}\n        {response.results &&\n          response.results.length > 0 &&\n          response.results.map(result => <SearchItem api={api} site={site} result={result} key={result.link} />)}\n      </div>\n    </>\n  );\n}\n\nSearch.defaultProps = { api: \"https://torrent-aio-bot.herokuapp.com/\" };\n\nexport default Search;\n"],"sourceRoot":""}