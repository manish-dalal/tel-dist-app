{"version":3,"sources":["components/Navbar.js","components/TopNav.js","screens/Home.js","screens/DriveHelp.js","components/Select.js","components/CategorySelector.js","components/ProgressBar.js","components/BotState.js","utils.js","hook/useTabState.js","screens/Task.js","screens/AddTask.js","screens/JoinRequests.js","App.js","index.js","components/Input.js","components/NightModeToggle.js"],"names":["Navbar","className","NightModeToggle","TopNav","nav","to","name","Search","lazy","Downloads","Drive","Home","tab","fallback","DriveHelp","useState","clientId","setClientId","clientSecret","setClientSecret","authCode","setAuthCode","showAuthCodeInput","setShowAuthCodeInput","token","setToken","loading","setLoading","error","setError","onSubmit","e","a","preventDefault","fetch","then","res","json","resp","window","open","authURL","JSON","stringify","Input","id","label","value","onChange","required","style","color","disabled","type","onClick","str","el","document","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","wrapperClass","labelProps","options","props","htmlFor","target","map","key","defaultProps","text","console","log","catOptions","defaultCatState","category","size","page","pageIncrementor","isRealImage","CategorySelector","defaultState","handleCategoryState","index","isLastElement","handleDeleteCatagory","isThumbActive","setCategory","setSize","setPage","setPageIncrementor","setIsRealImage","useEffect","Select","max","paddingBottom","checked","bind","ProgressBar","bgcolor","progress","height","progressText","Parentdiv","Childdiv","width","backgroundColor","textDiv","fontSize","BotState","botState","total","current","nextData","isEmpty","clamp","Math","trunc","splitArray","inputArray","pages","floor","length","finalArr","i","push","slice","useTabState","isActive","setUsActive","handleVisibilityChange","useCallback","visibilityState","addEventListener","removeEventListener","catObj","reduce","ac","cu","Task","data","setdata","history","useHistory","loadingText","setLoadingText","setBotState","selectedItems","setSelectedItems","filter","setfilter","by","order","sort","setSort","tasks","allTask","filterKeys","Object","keys","filterTasks","includes","orderBy","handleSort","col","temp","getData","axios","get","getProcesStateData","refreshTime","timer","setTimeout","clearTimeout","marginLeft","selectedTask","_id","pageSize","iterator","activeIndex","indexOf","post","padding","newFilter","linkType","status","groupInfo","title","toString","membersCount","categoryState","channelName","cname","lastExecuted","date","dateObj","Date","toLocaleTimeString","toLocaleDateString","getTimeStr","pathname","state","linkOptions","location","useLocation","locationState","groupId","setGroupId","setGroupInfo","setCategoryState","setChannelName","setLinkType","thumbUrl","thumbActive","setThumbActive","setThumbUrl","isCustomCname","setIsCustomCname","setCname","isEuOrgLink","setIsEuOrgLink","isNewMdisk","setIsNewMdisk","newCat","newCategoryState","params","isEqual","alignItems","telegramData","result","flex","justifyContent","isDeleted","JoinRequests","joinRequests","dayfilter","parseInt","newDate","moment","add","getDateFilter","created","format","action","handleFilters","onClickApproveRequest","endpoint","requests","approveData","marginRight","from","first_name","chat","App","exact","path","component","AddTask","ReactDOM","render","StrictMode","getElementById","localStored","process","browser","localStorage","getItem","nightMode","setNightMode","classList","setItem","remove"],"mappings":"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","file":"static/js/main.dd3fc002.chunk.js","sourcesContent":["import React from \"react\";\nimport NightModeToggle from \"./NightModeToggle\";\n\nfunction Navbar() {\n  return (\n    <div className=\"nav\">\n      <div className=\"content\">\n        <div className=\"nav-logo\">\n          <h1 className=\"h2 m-0\">Torrent AIO bot</h1>\n        </div>\n        <div className=\"nav-links\">\n          <NightModeToggle />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function TopNav({ nav }) {\n  return (\n    <div className=\"nav nav-horiz\">\n      <div className=\"content\">\n        <ul className=\"d-flex align-items-center space-around width-100 m-0\">\n          <li className={`cursor-pointer p-0 ph-1 height-100 d-flex align-items-center${nav === \"search\" ? \" border-bottom-1\" : \"\"}`}>\n            <Link to=\"/search\" className=\"height-100 d-flex align-items-center\">\n              <i className=\"h2 m-0 d-flex align-items-center\">\n                <ion-icon name=\"search-outline\" />\n              </i>\n              <span className=\"tablet-desktop-only ml-05\">Search</span>\n            </Link>\n          </li>\n          <li className={`cursor-pointer p-0 ph-1 height-100 d-flex align-items-center${nav === \"downloads\" ? \" border-bottom-1\" : \"\"}`}>\n            <Link to=\"/download\" className=\"height-100 d-flex align-items-center\">\n              <i className=\"h2 m-0 d-flex align-items-center\">\n                <ion-icon name=\"download-outline\" />\n              </i>\n              <span className=\"tablet-desktop-only ml-05\">Downloads</span>\n            </Link>\n          </li>\n          <li className={`cursor-pointer p-0 ph-1 height-100 d-flex align-items-center${nav === \"drive\" ? \" border-bottom-1\" : \"\"}`}>\n            <Link to=\"/drive\" className=\"height-100 d-flex align-items-center\">\n              <i className=\"h2 m-0 d-flex align-items-center\">\n                <ion-icon name=\"push-outline\" />\n              </i>\n              <span className=\"tablet-desktop-only ml-05\">Drive</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React, { lazy, Suspense } from \"react\";\nimport TopNav from \"../components/TopNav\";\n\nconst Search = lazy(() => import(\"../screens/Search\"));\nconst Downloads = lazy(() => import(\"../screens/Downloads\"));\nconst Drive = lazy(() => import(\"../screens/Drive\"));\n\nexport default function Home({ tab }) {\n  const nav = tab || \"search\";\n\n  return (\n    <>\n      <TopNav nav={nav} />\n      <main>\n        <div className=\"content\">\n          <Suspense fallback={<div className=\"div-loading\" />}>\n            {nav === \"search\" && <Search />}\n            {nav === \"downloads\" && <Downloads />}\n            {nav === \"drive\" && <Drive />}\n          </Suspense>\n        </div>\n      </main>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Input from \"../components/Input\";\n\nexport default function DriveHelp() {\n  const [clientId, setClientId] = useState(\"\");\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [authCode, setAuthCode] = useState(\"\");\n  const [showAuthCodeInput, setShowAuthCodeInput] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const copyToClipboard = () => {\n    const str = token;\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  const onSubmit = async e => {\n    if (e) e.preventDefault();\n    setLoading(true);\n    if (clientId && clientSecret && !authCode) {\n      const resp = await fetch(`/api/v1/drive/getAuthURL?clientId=${clientId}&clientSecret=${clientSecret}`).then(res => res.json());\n      if (!resp || resp.error) {\n        setError(resp.error || \"An error occured\");\n      } else {\n        window.open(resp.authURL);\n        setShowAuthCodeInput(true);\n      }\n    } else if (clientId && clientSecret && authCode) {\n      const resp = await fetch(\n        `/api/v1/drive/getAuthToken?clientId=${clientId}&clientSecret=${clientSecret}&authCode=${authCode}`\n      ).then(res => res.json());\n      if (!resp || resp.error) {\n        setError(resp.error || \"An error occured\");\n      } else {\n        setToken(JSON.stringify(resp.token));\n      }\n    }\n    setLoading(false);\n  };\n\n  return (\n    <main>\n      <div className=\"content\">\n        <h1>Gdrive token generator</h1>\n        <form onSubmit={onSubmit}>\n          <Input id=\"clientId\" name=\"clientId\" label=\"Client Id\" value={clientId} onChange={setClientId} required />\n          <Input id=\"clientSecret\" name=\"clientSecret\" label=\"Client Secret\" value={clientSecret} onChange={setClientSecret} required />\n          {showAuthCodeInput && <Input id=\"authCode\" name=\"authCode\" label=\"Auth code\" value={authCode} onChange={setAuthCode} required />}\n          {error && <div style={{ color: \"red\" }}>{error}</div>}\n          <button disabled={loading} className={`btn primary${loading ? \" loading\" : \"\"}`} type=\"submit\">\n            {authCode ? \"Get auth code\" : \"Generate token\"}\n          </button>\n        </form>\n        {token && (\n          <>\n            <div className=\"mt-1\">{token}</div>\n            <button className=\"btn primary\" onClick={copyToClipboard}>\n              Copy token\n            </button>\n          </>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Input({ label, labelProps, wrapperClass, onChange, id, options = [], ...props }) {\n  return (\n    <div className={`form-group ${wrapperClass ? wrapperClass : \"\"}`}>\n      <label htmlFor={id}>{label}</label>\n      <select className=\"form-control\" {...props} id={id} onChange={e => onChange(e.target.value)}>\n        {options.map(el => (\n          <option key={`option-${el.value}`} value={el.value}>\n            {el.label || el.value}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  onChange: text => console.log(\"Value: \", text)\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelProps: PropTypes.object,\n  wrapperClass: PropTypes.string,\n  type: PropTypes.oneOf([\"text\", \"password\", \"number\"]),\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool\n};\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\n\nexport const catOptions = [\n  { label: \"1Webseries\", value: \"1\" },\n  { label: \"2English\", value: \"2\" },\n  { label: \"3English Premium\", value: \"3\" },\n  { label: \"4Desi\", value: \"4\" },\n  { label: \"5English Bulk\", value: \"5\" },\n  { label: \"6Tango&onlyfans\", value: \"6\" },\n  { label: \"7-18+\", value: \"7\" }\n];\n\nexport const defaultCatState = {\n  category: catOptions[3].value,\n  size: \"20\",\n  page: \"0\",\n  pageIncrementor: \"2\",\n  isRealImage: false\n};\n\nconst CategorySelector = props => {\n  const { defaultState, handleCategoryState, index, isLastElement, handleDeleteCatagory, isThumbActive = false } = props;\n\n  const [category, setCategory] = useState(defaultState.category || catOptions[0].value);\n  const [size, setSize] = useState(defaultState.size || \"40\");\n  const [page, setPage] = useState(defaultState.page || \"0\");\n  const [pageIncrementor, setPageIncrementor] = useState(defaultState.pageIncrementor || \"2\");\n  const [isRealImage, setIsRealImage] = useState(!!defaultState.isRealImage);\n\n  useEffect(() => {\n    handleCategoryState({ category, size, page, pageIncrementor, isRealImage }, index);\n    // eslint-disable-next-line\n  }, [category, size, page, pageIncrementor, isRealImage]);\n\n  return (\n    <div className=\"category-select\">\n      <Select id=\"category\" name=\"category\" label=\"Category\" options={catOptions} value={category} onChange={setCategory} required />\n      <Input id=\"size\" max=\"100\" name=\"size\" label=\"Size(Number of messages)\" value={size} onChange={setSize} required type=\"number\" />\n      <Input id=\"page\" name=\"page\" label=\"Send Page\" value={page} onChange={setPage} required type=\"number\" />\n      <Input\n        id=\"pageIncrementor\"\n        name=\"pageIncrementor\"\n        label=\"Page Increment Factor\"\n        value={pageIncrementor}\n        onChange={setPageIncrementor}\n        required\n        type=\"number\"\n      />\n      {isThumbActive && (\n        <div style={{ paddingBottom: 20 }}>\n          <input type=\"checkbox\" id=\"isRealImage\" name=\"isRealImage\" checked={isRealImage} onChange={() => setIsRealImage(!isRealImage)} />\n          <label htmlFor=\"isRealImage\">Send real images</label>\n        </div>\n      )}\n\n      <div className=\"category-select-actions\">\n        {(!index ? !isLastElement : true) && (\n          <button className={`btn danger `} onClick={handleDeleteCatagory.bind(this, index)} type=\"button\">\n            Delete\n          </button>\n        )}\n\n        {isLastElement && (\n          <button className={`btn outline `} onClick={handleCategoryState.bind(this, defaultCatState)} type=\"button\">\n            Add More Category\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default CategorySelector;\n","import React from \"react\";\n\nconst ProgressBar = ({ bgcolor, progress, height, progressText }) => {\n  const Parentdiv = {\n    height: height\n  };\n\n  const Childdiv = {\n    width: `${progress}%`,\n    backgroundColor: bgcolor\n  };\n\n  const textDiv = {\n    fontSize: height - 2\n  };\n\n  return (\n    <div className=\"progress-bar\" style={Parentdiv}>\n      <div className=\"progress-bar-child\" style={Childdiv}>\n        <span className=\"progress-bar-text\" style={textDiv}>\n          {progressText ? progressText : `${progress}%`}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport clamp from \"lodash/clamp\";\n\nimport Progressbar from \"./ProgressBar\";\nconst progressHeight = 16;\n\nconst BotState = props => {\n  const { botState = {} } = props;\n  const { total = 0, current = 0, nextData = 0 } = botState;\n\n  return (\n    <div className=\"bot-state\">\n      {isEmpty(botState) ? (\n        <div>No Active task</div>\n      ) : (\n        <>\n          {total ? (\n            <>\n              <div>Current Queue</div>\n              <Progressbar\n                bgcolor=\"#ff00ff\"\n                progress={clamp(Math.trunc((current * 100) / total), 0, 100)}\n                progressText={`${current}/${total}`}\n                height={progressHeight}\n              />\n            </>\n          ) : null}\n          {nextData ? (\n            <>\n              <div>Next Queue</div>\n              <Progressbar bgcolor=\"orange\" progress=\"0\" progressText={`${0}/${nextData}`} height={progressHeight} />{\" \"}\n            </>\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\nexport default BotState;\n","export const splitArray = inputArray => {\n  const pageSize = 10;\n\n  const pages = Math.floor(inputArray.length / pageSize);\n  const finalArr = [];\n  for (let i = 0; i <= pages; i++) {\n    finalArr.push(inputArray.slice(i * pageSize, (i + 1) * pageSize));\n  }\n  return [finalArr, pageSize];\n};\n","import { useEffect, useState, useCallback } from \"react\";\n\nconst useTabState = () => {\n  const [isActive, setUsActive] = useState(true);\n\n  const handleVisibilityChange = useCallback(() => {\n    setUsActive(document.visibilityState === \"visible\");\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return { isActive };\n};\n\nexport default useTabState;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport get from \"lodash/get\";\nimport { catOptions } from \"../components/CategorySelector\";\nimport BotState from \"../components/BotState\";\nimport { splitArray } from \"../utils\";\nimport isEmpty from \"lodash/isEmpty\";\nimport useTabState from \"../hook/useTabState\";\n\nconst catObj = catOptions.reduce((ac, cu) => ({ ...ac, [cu.value]: cu.label }), {});\nconst getTimeStr = date => {\n  const dateObj = new Date(date);\n  return `${dateObj.toLocaleTimeString()} ${dateObj.toLocaleDateString()}`;\n};\n\nexport default function Task() {\n  const [data, setdata] = useState({});\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"Loading...\");\n  const [botState, setBotState] = useState({});\n  const { isActive } = useTabState();\n\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [filter, setfilter] = useState({});\n\n  // ['asc', 'desc']\n  const [sort, setSort] = useState({ by: \"\", order: \"asc\" });\n\n  const { tasks: allTask = [] } = data;\n  const filterKeys = Object.keys(filter);\n  const filterTasks = filterKeys.length ? allTask.filter(e => e[filterKeys[0]].includes(filter[filterKeys[0]])) : allTask;\n  const tasks = orderBy(filterTasks, sort.by, sort.order);\n\n  const handleSort = col => {\n    const temp = sort.by === col && sort.order === \"asc\" ? \"desc\" : \"asc\";\n    setSort({ by: col, order: temp });\n  };\n\n  const getData = async () => {\n    setLoading(true);\n    const { data: resData = {} } = await axios.get(\"/api/v1/task/list\");\n    setdata(resData);\n    setLoading(false);\n  };\n\n  const getProcesStateData = async () => {\n    const { data: resData = {} } = await axios.get(\"/api/v1/task/processStats\");\n    setBotState(resData);\n  };\n\n  useEffect(() => {\n    getData();\n    getProcesStateData();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (isActive && !loading) {\n      const refreshTime = isEmpty(botState) ? 30 * 1000 : 10 * 1000;\n      const timer = setTimeout(getProcesStateData, refreshTime);\n      return () => clearTimeout(timer);\n    }\n  }, [botState, isActive, loading]);\n\n  return (\n    <main>\n      <div className=\"content\">\n        <div className=\"d-flex\">\n          <div className=\"d-flex flex-1\">\n            <h1>Tasks List</h1>\n            <button style={{ marginLeft: 20 }} className=\"danger\" onClick={getData}>\n              Refresh\n            </button>\n          </div>\n          {!!selectedItems.length && (\n            <button\n              disabled={loading}\n              onClick={async () => {\n                try {\n                  setLoading(true);\n                  const selectedTask = tasks.filter(e => selectedItems.includes(e._id));\n                  const [finalArr, pageSize] = splitArray(selectedTask);\n                  for (const iterator of finalArr) {\n                    try {\n                      const activeIndex = finalArr.indexOf(iterator);\n                      setLoadingText(`Starting bot on ${activeIndex * pageSize}/${selectedTask.length}`);\n                      const { data } = await axios.post(\"/api/v1/task/start\", iterator);\n                      console.log(\"tasks response===\", data);\n                    } catch (error) {\n                      // setLoadingText(`Starting bot on ${1 * pageSize}/${selectedTask.length}`);\n                    }\n                  }\n                  setLoading(false);\n                  setLoadingText(\"Loading...\");\n                  getData();\n                } catch (error) {\n                  setLoading(false);\n                  getData();\n                }\n              }}\n            >\n              {`Send ${selectedItems.length} chats`}\n            </button>\n          )}\n          <button onClick={() => history.push(\"/task/upsert\")}>Add</button>\n        </div>\n        <BotState botState={botState} />\n        <div className=\"d-flex align-center\" style={{ padding: \"15px 0px\" }}>\n          <div>Filters: </div>\n          <button\n            className={get(filter, \"linkType\", \"\").includes(\"mdisk\") ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              const newFilter = { ...filter, linkType: \"mdisk\" };\n              if (get(filter, \"linkType\", \"\").includes(\"mdisk\")) {\n                delete newFilter.linkType;\n              }\n              setfilter(newFilter);\n            }}\n          >\n            Mdisk\n          </button>\n          <button\n            className={get(filter, \"linkType\", \"\").includes(\"vivdisk\") ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              const newFilter = { ...filter, linkType: \"vivdisk\" };\n              if (get(filter, \"linkType\", \"\").includes(\"vivdisk\")) {\n                delete newFilter.linkType;\n              }\n              setfilter(newFilter);\n            }}\n          >\n            Vivdisk\n          </button>\n          <button\n            className={get(filter, \"status\", \"\").includes(\"processing\") ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              const newFilter = { ...filter, status: \"processing\" };\n              if (get(filter, \"status\", \"\").includes(\"processing\")) {\n                delete newFilter.status;\n              }\n              setfilter(newFilter);\n            }}\n          >\n            processing\n          </button>\n        </div>\n        <table className=\"task\">\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.length === tasks.length}\n                  onChange={e => {\n                    setSelectedItems(e.target.checked ? tasks.map(e => e._id) : []);\n                  }}\n                />\n              </th>\n              <th>S.No</th>\n              <th onClick={() => handleSort(\"groupInfo.title\")}>Group Name</th>\n              <th onClick={() => handleSort(\"category\")}>Category</th>\n              <th onClick={() => handleSort(\"size\")}>Size</th>\n              <th onClick={() => handleSort(\"page\")}>Send Page</th>\n              <th onClick={() => handleSort(\"pageIncrementor\")}>Page Incrementor</th>\n              <th onClick={() => handleSort(\"channelName\")}>Channel Name</th>\n              <th onClick={() => handleSort(\"linkType\")}>link Type</th>\n              <th onClick={() => handleSort(\"cname\")}>Cname</th>\n              <th onClick={() => handleSort(\"lastExecuted\")}>Last Executed</th>\n              <th onClick={() => handleSort(\"status\")}>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks &&\n              tasks.map((el, index) => (\n                <tr key={`tassk-${index}`}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedItems.includes(el._id)}\n                      onChange={e => {\n                        setSelectedItems(e.target.checked ? [...selectedItems, el._id] : selectedItems.filter(e => e !== el._id));\n                      }}\n                    />\n                  </td>\n                  <td>{index + 1}</td>\n                  <td>{`${el?.groupInfo?.title} (${el?.groupInfo?.id.toString().slice(4)}) \\n(${el.membersCount || \"\"})`}</td>\n                  <td>{el.categoryState.map(e => `${catObj[e.category]} \\n`)}</td>\n                  <td>{el.categoryState.reduce((ac, e) => ac + +e.size, 0)}</td>\n                  <td>\n                    {el.categoryState.map(e => (\n                      <div>{e.page}</div>\n                    ))}\n                  </td>\n                  <td>\n                    {el.categoryState.map(e => (\n                      <div>{e.pageIncrementor}</div>\n                    ))}\n                  </td>\n                  <td>{el.channelName}</td>\n                  <td>{el.linkType}</td>\n                  <td>{el.cname}</td>\n                  <td>{el.lastExecuted && getTimeStr(el.lastExecuted)}</td>\n                  <td>\n                    <>\n                      {/* <button\n                          disabled={loading}\n                          onClick={async () => {\n                            try {\n                              setLoading(true);\n                              const { data } = await axios.post(\"/api/v1/task/start\", [el]);\n                              console.log(\"start response===\", data);\n                              setLoading(false);\n                            } catch (error) {\n                              setLoading(false);\n                            }\n                          }}\n                        >\n                          Start\n                        </button> */}\n                      <button\n                        className=\"btn icon-only\"\n                        onClick={() =>\n                          history.push({\n                            pathname: \"/task/upsert\",\n                            state: el\n                          })\n                        }\n                      >\n                        Edit\n                      </button>\n                      <div>{el.status === \"active\" ? \"\" : el.status}</div>\n                    </>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n        {loading && (\n          <div className=\"d-flex loading-box\">\n            <div className=\"loading-div\"></div>\n            <div>{loadingText}</div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport CategorySelector, { defaultCatState } from \"../components/CategorySelector\";\n\nimport isEmpty from \"lodash/isEmpty\";\nimport isEqual from \"lodash/isEqual\";\n\nconst linkOptions = [{ value: \"mdisk\" }, { value: \"dood\" }, { value: \"vivdisk\" }];\n\nexport default function DriveHelp() {\n  const history = useHistory();\n  const location = useLocation();\n  const locationState = location?.state || {};\n\n  const [groupId, setGroupId] = useState(locationState.groupInfo?.id || \"\");\n  const [groupInfo, setGroupInfo] = useState(locationState.groupInfo || {});\n\n  const [categoryState, setCategoryState] = useState(locationState.categoryState || [defaultCatState]);\n\n  const [channelName, setChannelName] = useState(locationState.channelName || \"primexmov\");\n  const [linkType, setLinkType] = useState(locationState.linkType || linkOptions[0].value);\n  const [thumbActive, setThumbActive] = useState(!!locationState.thumbUrl || false);\n  const [thumbUrl, setThumbUrl] = useState(\n    locationState.thumbUrl || \"https://drive.google.com/uc?export=view&id=1GK6SH3Kwgu-Nwr4ilQPyiKuk26tbZmxb\"\n  );\n  const handleSetThumbUrl = el => {\n    setThumbActive(el);\n    if (el) {\n      setCategoryState(categoryState.map(el => ({ ...el, isRealImage: false })));\n    } else {\n      setCategoryState(\n        categoryState.map(el => {\n          delete el.isRealImage;\n          return { ...el };\n        })\n      );\n    }\n  };\n  const [isCustomCname, setIsCustomCname] = useState(locationState.cname ? locationState.cname !== \"v1\" : false);\n  const [cname, setCname] = useState(locationState.cname || \"v1\");\n\n  // eslint-disable-next-line\n  const [isEuOrgLink, setIsEuOrgLink] = useState(locationState.groupInfo ? locationState.isEuOrgLink : true);\n  const [isNewMdisk, setIsNewMdisk] = useState(locationState.groupInfo ? locationState.isNewMdisk : false);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleCategoryState = (newCat, index) => {\n    const newCategoryState = [...categoryState];\n    if (typeof index === \"number\") {\n      newCategoryState[index] = newCat;\n    } else {\n      newCategoryState.push(newCat);\n    }\n    setCategoryState(newCategoryState);\n  };\n\n  const handleDeleteCatagory = index => {\n    const newCategoryState = categoryState.filter((el, i) => i !== index);\n    setCategoryState(newCategoryState);\n  };\n\n  const onSubmit = async e => {\n    if (e) e.preventDefault();\n    if (isEmpty(groupInfo)) {\n      setError(\"Click on get info after passing groupId\");\n      return false;\n    }\n    setLoading(true);\n    const params = {\n      groupInfo,\n      categoryState,\n      channelName,\n      linkType,\n      isNewMdisk,\n      isEuOrgLink\n    };\n    params.thumbUrl = thumbActive ? thumbUrl : \"\";\n    params.cname = isCustomCname ? cname : \"\";\n\n    console.log(\"sfsfsf\", params);\n    try {\n      if (locationState._id) {\n        if (params.groupInfo === locationState.groupInfo && params.groupInfo) delete params.groupInfo;\n        if (params.channelName === locationState.channelName && params.channelName) delete params.channelName;\n        if (params.linkType === locationState.linkType && params.linkType) delete params.linkType;\n        if (thumbActive && params.thumbUrl === locationState.thumbUrl) delete params.thumbUrl;\n        if (params.cname === locationState.cname) delete params.cname;\n        if (params.isNewMdisk === locationState.isNewMdisk) delete params.isNewMdisk;\n        if (params.isEuOrgLink === locationState.isEuOrgLink) delete params.isEuOrgLink;\n        if (isEqual(params.categoryState, locationState.categoryState)) delete params.categoryState;\n        if (isEmpty(params)) {\n          setLoading(false);\n          return;\n        }\n        params._id = locationState._id;\n        const { data } = await axios.post(\"/api/v1/task/update\", params);\n        console.log(\"update response==\", data);\n        if (data) {\n          history.push(\"/task\");\n        }\n        setLoading(false);\n      } else {\n        const { data } = await axios.post(\"/api/v1/task/add\", params);\n        console.log(\"api response===\", data);\n        if (data) {\n          history.push(\"/task\");\n        }\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(\"api error\", error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"content\">\n        <h1>Gdrive token generator</h1>\n        <form onSubmit={onSubmit}>\n          <Select id=\"linkType\" name=\"linkType\" label=\"Link Type\" options={linkOptions} value={linkType} onChange={setLinkType} required />\n          <Input id=\"groupId\" name=\"groupId\" label=\"Group Id\" value={groupId} onChange={setGroupId} required />\n          <div className=\"d-flex\" style={{ alignItems: \"center\" }}>\n            <button\n              disabled={loading}\n              onClick={async () => {\n                try {\n                  setLoading(true);\n                  const { data: telegramData = {} } = await axios.get(\n                    `/api/v1/task/telegramget?url=https://api.telegram.org/bot_bot_token_/getChat?chat_id=${groupId}`\n                  );\n                  console.log(\"api response===\", telegramData);\n                  setGroupInfo(telegramData.data.result);\n                  setLoading(false);\n                } catch (error) {\n                  setLoading(false);\n                  setGroupInfo({});\n                }\n              }}\n            >\n              {loading ? \"Loading...\" : \"Get Chat Info\"}\n            </button>\n            <div style={{ flex: 1 }}>\n              <Input id=\"groupName\" name=\"groupName\" label=\"\" value={groupInfo.title} disabled />\n            </div>\n          </div>\n\n          <Input\n            id=\"channelName\"\n            name=\"channelName\"\n            label=\"Channel Name(without @)\"\n            value={channelName}\n            onChange={setChannelName}\n            required\n          />\n\n          <div style={{ paddingBottom: 20 }}>\n            <input type=\"checkbox\" id=\"isNewMdisk\" name=\"isNewMdisk\" checked={isNewMdisk} onChange={() => setIsNewMdisk(!isNewMdisk)} />\n            <label htmlFor=\"isNewMdisk\">Convert New mdisk links by bot</label>\n          </div>\n\n          <div style={{ paddingBottom: 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"isEuOrgLink\"\n              name=\"isEuOrgLink\"\n              checked={isEuOrgLink}\n              onChange={() => setIsEuOrgLink(!isEuOrgLink)}\n            />\n            <label htmlFor=\"isEuOrgLink\">Get mdisk.eu.org links</label>\n          </div>\n\n          <div style={{ paddingBottom: thumbActive ? 5 : 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"thumbActive\"\n              name=\"thumbActive\"\n              checked={thumbActive}\n              onChange={() => handleSetThumbUrl(!thumbActive)}\n            />\n            <label htmlFor=\"thumbActive\">Add Thumb image to message</label>\n          </div>\n\n          {thumbActive && <Input id=\"thumbUrl\" name=\"thumbUrl\" label=\"\" value={thumbUrl} onChange={setThumbUrl} />}\n\n          <div style={{ paddingBottom: isCustomCname ? 5 : 20 }}>\n            <input\n              type=\"checkbox\"\n              id=\"isCustomCname\"\n              name=\"isCustomCname\"\n              checked={isCustomCname}\n              onChange={() => setIsCustomCname(!isCustomCname)}\n            />\n            <label htmlFor=\"isCustomCname\">Use Custom cname</label>\n          </div>\n          {isCustomCname && <Input id=\"cname\" name=\"cname\" label=\"\" value={cname} onChange={setCname} />}\n\n          {categoryState.map((el, index) => (\n            <CategorySelector\n              key={index}\n              index={index}\n              defaultState={el}\n              handleCategoryState={handleCategoryState}\n              isLastElement={categoryState.length - 1 === index}\n              handleDeleteCatagory={handleDeleteCatagory}\n              isThumbActive={thumbActive}\n            />\n          ))}\n\n          {error && <div style={{ color: \"red\" }}>{error}</div>}\n          <div\n            className=\"d-flex\"\n            style={{\n              justifyContent: \"space-between\"\n            }}\n          >\n            <button disabled={loading} className={`btn primary${loading ? \" loading\" : \"\"}`} type=\"submit\">\n              {locationState._id ? \"Update Task\" : \"Insert Task\"}\n            </button>\n\n            {locationState._id && (\n              <button\n                disabled={loading}\n                className=\"btn danger\"\n                onClick={async () => {\n                  setLoading(true);\n                  try {\n                    const params = { isDeleted: true };\n                    params._id = locationState._id;\n                    const { data } = await axios.post(\"/api/v1/task/update\", params);\n                    console.log(\"Delete response==\", data);\n                    if (data) {\n                      history.push(\"/task\");\n                    }\n                    setLoading(false);\n                  } catch (error) {\n                    setLoading(false);\n                  }\n                }}\n              >\n                Delete\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport orderBy from \"lodash/orderBy\";\nimport { splitArray } from \"../utils\";\n\nconst getTimeStr = date => {\n  const dateObj = new Date(date);\n  return `${dateObj.toLocaleTimeString()} ${dateObj.toLocaleDateString()}`;\n};\n\nexport default function JoinRequests() {\n  const [data, setdata] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [filter, setfilter] = useState(\"\");\n  const [loadingText, setLoadingText] = useState(\"Loading...\");\n\n  // const [pageLimit, setPageLimit] = useState(\"100\");\n\n  // ['asc', 'desc']\n  const [sort, setSort] = useState({ by: \"\", order: \"asc\" });\n\n  const { joinRequests: allJoinRequests = [] } = data;\n  // filter ? allJoinRequests.filter(e => moment().diff(moment(e.created), \"days\") >= parseInt(filter)) :\n  const filterTasks = allJoinRequests;\n  const tasks = orderBy(filterTasks, sort.by, sort.order);\n\n  const handleSort = col => {\n    const temp = sort.by === col && sort.order === \"asc\" ? \"desc\" : \"asc\";\n    setSort({ by: col, order: temp });\n  };\n\n  const getData = async () => {\n    setLoading(true);\n    const dayfilter = parseInt(filter);\n    const newDate = moment().add(\"days\", -dayfilter);\n    const getDateFilter = filter ? { created: newDate.format(\"YYYY-MM-DD\") } : {};\n    const { data: resData = {} } = await axios.post(\"/api/v1/chatjoin/all\", { action: \"list\", data: getDateFilter });\n    setdata(resData.data);\n    setLoading(false);\n  };\n\n  const handleFilters = el => {\n    setfilter(el);\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [filter]);\n\n  const onClickApproveRequest = async (endpoint = \"/approve\") => {\n    try {\n      setLoading(true);\n      const selectedTask = tasks.filter(e => selectedItems.includes(e._id));\n      const [finalArr, pageSize] = splitArray(selectedTask);\n\n      for (const iterator of finalArr) {\n        try {\n          const activeIndex = finalArr.indexOf(iterator);\n          setLoadingText(`Accepting request ${activeIndex * pageSize}/${selectedTask.length}`);\n          const { data: approveData = {} } = await axios.post(`/api/v1/chatjoin${endpoint}`, {\n            requests: iterator\n          });\n          console.log(\"Approve response===\", approveData);\n        } catch (error) {\n          // setLoadingText(`Starting bot on ${1 * pageSize}/${selectedTask.length}`);\n        }\n      }\n      setLoading(false);\n      setLoadingText(\"Loading...\");\n      getData();\n    } catch (error) {\n      setLoading(false);\n      getData();\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"content\">\n        <div className=\"d-flex\">\n          <div className=\"d-flex flex-1\">\n            <h1>Requests List</h1>\n            <button style={{ marginLeft: 20 }} className=\"danger\" onClick={getData}>\n              Refresh\n            </button>\n          </div>\n          {!!selectedItems.length && (\n            <>\n              <button disabled={loading} style={{ marginRight: 5 }} onClick={() => onClickApproveRequest()}>\n                {`Approve ${selectedItems.length} requests`}\n              </button>\n              <button disabled={loading} onClick={() => onClickApproveRequest(\"/approveandclear\")}>\n                {`ApproveClear ${selectedItems.length} requests`}\n              </button>\n            </>\n          )}\n        </div>\n        <div className=\"d-flex align-center\" style={{ padding: \"15px 0px\" }}>\n          <div>Filters: </div>\n          <button\n            className={filter === \"1DAY\" ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              handleFilters(filter === \"1DAY\" ? \"\" : \"1DAY\");\n            }}\n          >\n            1 day ago\n          </button>\n          <button\n            className={filter === \"2DAY\" ? \"\" : \"outline\"}\n            onClick={() => {\n              setSelectedItems([]);\n              handleFilters(filter === \"2DAY\" ? \"\" : \"2DAY\");\n            }}\n          >\n            2 day ago\n          </button>\n        </div>\n        <table className=\"task\">\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.length === tasks.length}\n                  onChange={e => {\n                    setSelectedItems(e.target.checked ? tasks.map(e => e._id) : []);\n                  }}\n                />\n              </th>\n              <th>S.No</th>\n              <th onClick={() => handleSort(\"from.id\")}>User Id</th>\n              <th onClick={() => handleSort(\"from.first_name\")}>First Name</th>\n              <th onClick={() => handleSort(\"chat.title\")}>Chat</th>\n              <th onClick={() => handleSort(\"created\")}>Created</th>\n              <th onClick={() => handleSort(\"status\")}>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks &&\n              tasks.map((el, index) => (\n                <tr key={`tassk-${index}`}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedItems.includes(el._id)}\n                      onChange={e => {\n                        setSelectedItems(e.target.checked ? [...selectedItems, el._id] : selectedItems.filter(e => e !== el._id));\n                      }}\n                    />\n                  </td>\n                  <td>{index + 1}</td>\n                  <td>{el.from.id}</td>\n                  <td>{el.from.first_name}</td>\n                  <td>{el.chat.title}</td>\n                  <td>{el.created && getTimeStr(el.created)}</td>\n                  <td>\n                    <>\n                      <button\n                        disabled={loading}\n                        onClick={async () => {\n                          try {\n                            setLoading(true);\n                            const { data: approveData = {} } = await axios.post(\"/api/v1/chatjoin/reject\", {\n                              requests: [el]\n                            });\n                            console.log(\"reject response===\", approveData);\n                            setLoading(false);\n                          } catch (error) {\n                            setLoading(false);\n                          }\n                        }}\n                      >\n                        Reject\n                      </button>\n                      <button\n                        className=\"btn\"\n                        disabled={loading}\n                        onClick={async () => {\n                          try {\n                            setLoading(true);\n                            const { data: approveData = {} } = await axios.post(\"/api/v1/chatjoin/approve\", {\n                              requests: [el]\n                            });\n                            console.log(\"Approve response===\", approveData);\n                            setLoading(false);\n                          } catch (error) {\n                            setLoading(false);\n                          }\n                        }}\n                      >\n                        Approve\n                      </button>\n                      {/* <div>{el.status === \"active\" ? \"\" : el.status}</div> */}\n                    </>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n        {/* <div className=\"pagination\">\n          <select onSelect={el => console.log(el)} value={pageLimit}>\n            <option value=\"100\">100</option>\n            <option value=\"200\">200</option>\n            <option value=\"500\">500</option>\n          </select>\n        </div> */}\n        {loading && (\n          <div className=\"d-flex loading-box\">\n            <div className=\"loading-div\"></div>\n            <div>{loadingText}</div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./screens/Home\";\nimport DriveHelp from \"./screens/DriveHelp\";\nimport Task from \"./screens/Task\";\nimport AddTask from \"./screens/AddTask\";\nimport JoinRequests from \"./screens/JoinRequests\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/search\">\n          <Home tab=\"search\" />\n        </Route>\n        <Route path=\"/drive/:folderId?\">\n          <Home tab=\"drive\" />\n        </Route>\n        <Route exact path=\"/download\">\n          <Home tab=\"downloads\" />\n        </Route>\n        <Route exact path=\"/drivehelp\" component={DriveHelp} />\n        <Route exact path=\"/task\" component={Task} />\n        <Route exact path=\"/task/upsert\" component={AddTask} />\n        <Route exact path=\"/requests\" component={JoinRequests} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Navbar from \"./components/Navbar\";\nimport App from \"./App\";\nimport \"./assets/css/index.css\";\nimport \"./assets/css/helpers.css\";\nimport \"./assets/css/navbar.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Input({ label, labelProps, wrapperClass, onChange, id, ...props }) {\n  return (\n    <div className={`form-group ${wrapperClass ? wrapperClass : \"\"}`}>\n      <label htmlFor={id}>{label}</label>\n      <input className=\"form-control\" id={id} onChange={e => onChange(e.target.value)} {...props} />\n    </div>\n  );\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  onChange: text => console.log(\"Value: \", text)\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelProps: PropTypes.object,\n  wrapperClass: PropTypes.string,\n  type: PropTypes.oneOf([\"text\", \"password\", \"number\"]),\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\n\nexport default function NightModeToggle() {\n  let localStored = false;\n  if (process.browser) {\n    localStored = localStorage.getItem(\"nightMode\") === \"true\";\n  }\n\n  const [nightMode, setNightMode] = useState(localStored);\n\n  if (process.browser) {\n    if (nightMode) {\n      document.body.classList.add(\"dark\");\n      localStorage.setItem(\"nightMode\", true);\n    } else {\n      document.body.classList.remove(\"dark\");\n      localStorage.setItem(\"nightMode\", false);\n    }\n  }\n\n  return (\n    <button className=\"btn mv-auto sm neutral\" onClick={() => setNightMode(!nightMode)}>\n      <span className=\"bnt-icon\">\n        <ion-icon name=\"moon\" />\n      </span>\n    </button>\n  );\n}\n"],"sourceRoot":""}