{"version":3,"sources":["components/Picker.js","components/SearchItem.js","screens/Search.js"],"names":["Picker","label","labelProps","wrapperClass","onChange","id","options","props","className","htmlFor","e","target","value","map","opt","key","name","defaultProps","text","console","log","SearchItem","result","site","api","useState","loading","setLoading","response","setResponse","loadDetails","a","fetch","link","res","status","error","errorMessage","json","seeds","details","torrent","onClick","disabled","i","infoText","infoTitle","href","downloadLink","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","Search","term","setTerm","setSite","search","preventDefault","onSubmit","required","Input","placeholder","type","results","length"],"mappings":"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","file":"static/js/6.57e806b7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Picker({ label, labelProps, wrapperClass, onChange, id, options, ...props }) {\n  return (\n    <div className={`form-group${wrapperClass ? ` ${wrapperClass}` : \"\"}`}>\n      <label htmlFor={id} {...labelProps}>\n        {label}\n      </label>\n      <select className=\"form-control\" id={id} onChange={e => onChange(e.target.value)} {...props}>\n        <option>Select one</option>\n        {options &&\n          options.map(opt => (\n            <option value={opt.value} key={opt.value}>\n              {opt.name}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n}\n\nPicker.defaultProps = {\n  onChange: text => console.log(\"Value: \", text)\n};\n\nPicker.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  labelProps: PropTypes.object,\n  wrapperClass: PropTypes.string,\n  onChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  required: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape({ value: PropTypes.string.isRequired, name: PropTypes.string.isRequired }))\n    .isRequired\n};\n\nexport default Picker;\n","import React, { useState } from \"react\";\n\nfunction SearchItem({ result, site, api }) {\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState({});\n\n  const loadDetails = async () => {\n    setLoading(true);\n\n    const res = await fetch(api + \"api/v1/details/\" + site + \"?query=\" + result.link);\n    if (res.status !== 200) {\n      setResponse({ error: true, errorMessage: \"Cannot connect to site\" });\n    } else {\n      const response = await res.json();\n      setResponse({ ...response });\n    }\n\n    setLoading(false);\n  };\n\n  const copyToClipboard = () => {\n    const str = response.torrent.downloadLink;\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h2>{result.name}</h2>\n        <div className=\"text-primary text-400\">Seeds: {result.seeds}</div>\n        <div className=\"text-400\">{result.details}</div>\n        {!response.torrent && (\n          <button onClick={loadDetails} disabled={loading} className={`btn primary${loading ? \" loading\" : \"\"}`}>\n            Load details\n          </button>\n        )}\n        {response.error && <div className=\"text-danger\">{response.errorMessage}</div>}\n        {response.torrent && (\n          <div className=\"mt-1\">\n            {response.torrent.details.map(({ infoText, infoTitle }, i) => (\n              <div className=\"d-flex space-between\" key={i}>\n                <div className=\"text-400\">{infoTitle}</div>\n                <div className=\"text-300\">{infoText}</div>\n              </div>\n            ))}\n            <a href={response.torrent.downloadLink} className=\"btn warning m-0 mt-1\">\n              Download\n            </a>\n            <button onClick={copyToClipboard} className=\"btn primary m-0 ml-1 mt-1\">\n              Copy link\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchItem;\n","import React, { useState } from \"react\";\nimport Input from \"../components/Input\";\nimport Picker from \"../components/Picker\";\nimport SearchItem from \"../components/SearchItem\";\n\nfunction Search({ api }) {\n  const [term, setTerm] = useState(\"\");\n  const [site, setSite] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState({});\n\n  const search = async e => {\n    if (e) e.preventDefault();\n    setLoading(true);\n\n    if (term !== \"\") {\n      const res = await fetch(api + \"api/v1/search/\" + site + \"?query=\" + term);\n      if (res.status !== 200) {\n        setResponse({\n          error: true,\n          errorMessage: \"Cannot connect to site\"\n        });\n      } else {\n        const response = await res.json();\n        setResponse(response);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <h1>Search</h1>\n      <form onSubmit={search}>\n        <Picker\n          id=\"site\"\n          name=\"site\"\n          label=\"Select site\"\n          value={site}\n          onChange={setSite}\n          options={[\n            { name: \"1337x\", value: \"1337x\" },\n            { name: \"Limetorrents\", value: \"limetorrent\" },\n            { name: \"Piratebay\", value: \"piratebay\" }\n          ]}\n          required\n        />\n        <Input\n          id=\"term\"\n          name=\"term\"\n          label=\"Search Term\"\n          placeholder=\"The forgotten army, Flames...\"\n          value={term}\n          onChange={setTerm}\n          required\n        />\n        <button disabled={loading || !site} className={`btn primary${loading ? \" loading\" : \"\"}`} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"d-flex-column mv-1\">\n        {response.error && <div className=\"text-danger\">{response.errorMessage}</div>}\n        {response.results &&\n          response.results.length > 0 &&\n          response.results.map(result => <SearchItem api={api} site={site} result={result} key={result.link} />)}\n      </div>\n    </>\n  );\n}\n\nSearch.defaultProps = { api: \"https://torrent-aio-bot.herokuapp.com/\" };\n\nexport default Search;\n"],"sourceRoot":""}